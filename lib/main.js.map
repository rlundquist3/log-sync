{"version":3,"file":"main.js","sources":["../src/parseNotes.js","../src/urqlClient.js","../src/syncWithDatabase.js","../src/logSync.js","../src/clearDatabase.js","../src/main.js"],"sourcesContent":["const gradeRegEx = /(5\\.\\d+[a-d]|V\\d+)/;\n\nexport const parseNotes = (notes) =>\n  notes\n    .map((note) => {\n      const sendsSection = note.body.split(/\\*\\*noteworthy sends:\\*\\*/i)[1];\n      if (!!sendsSection) {\n        const sends = sendsSection\n          .split(/(-|\\n)/)\n          .filter((s) => !!s.match(gradeRegEx));\n\n        return sends.map((s) => {\n          const grade = s.match(gradeRegEx)[0];\n          return {\n            name: s.replace(`, ${grade}`, \"\").trim(),\n            grade,\n            sendDate: new Date(note.createdAt),\n          };\n        });\n      }\n\n      return null;\n    })\n    .filter((s) => !!s)\n    .flat();\n","import { Client, fetchExchange } from \"@urql/core\";\n\nexport const client = new Client({\n  url: \"https://climb-log-api.vercel.app/graphql\",\n  exchanges: [fetchExchange],\n});\n","import { client } from \"./urqlClient\";\nimport { gql } from \"@urql/core\";\n\nconst createClimbsMutation = gql`\n  mutation CreateClimbs($input: [ClimbCreateInput!]!) {\n    createClimbs(input: $input) {\n      climbs {\n        id\n      }\n      info {\n        nodesCreated\n      }\n    }\n  }\n`;\n\nexport const syncWithDatabase = async (climbs) => {\n  const input = climbs.map(({ name, grade, sendDate }) => ({\n    name,\n    grade,\n    type: !!grade.match(/V\\d+/) ? \"boulder\" : \"sport\",\n    sendDate,\n    source: \"inkdrop\",\n  }));\n\n  const { data } = await client.mutation(createClimbsMutation, { input });\n  console.log(\n    `${data?.createClimbs?.info?.nodesCreated} sends added to database`\n  );\n};\n","import { parseNotes } from \"./parseNotes\";\nimport { syncWithDatabase } from \"./syncWithDatabase\";\n\nexport const logSync = async () => {\n  console.log(\"Staring log sync\");\n\n  const db = inkdrop.main.dataStore.getLocalDB();\n  const sendsTag = await db.tags.findWithName(\"sends!\");\n  let syncedTag = await db.tags.findWithName(\"synced\");\n  if (!syncedTag) {\n    console.log(\"Database cleared - creating new synced tag\");\n    await db.tags.put({\n      _id: await db.tags.createId(),\n      name: \"synced\",\n      color: \"default\",\n      count: 0,\n      createdAt: Number(new Date()),\n      updatedAt: Number(new Date()),\n    });\n    syncedTag = await db.tags.findWithName(\"synced\");\n  }\n\n  // TODO: actually paginate and query\n  const notesWithSends = (\n    await db.notes.findWithTag(sendsTag._id, {\n      limit: 1000,\n    })\n  ).docs.filter(({ tags }) => !tags.includes(syncedTag._id));\n  console.log(`${notesWithSends.length} sessions sync`);\n\n  const parsedClimbs = parseNotes(notesWithSends);\n\n  await syncWithDatabase(parsedClimbs);\n\n  const noteIds = notesWithSends.map(({ _id }) => _id);\n  await db.utils.setTagsBatch(noteIds, [syncedTag._id]);\n};\n","import { client } from \"./urqlClient\";\nimport { gql } from \"@urql/core\";\n\nconst deleteAllClimbsMutation = gql`\n  mutation DeleteAllClimbs($where: ClimbWhere) {\n    deleteClimbs(where: $where) {\n      nodesDeleted\n    }\n  }\n`;\n\nexport const clearDatabase = async () => {\n  const { data } = await client.mutation(deleteAllClimbsMutation, {\n    where: { source: \"inkdrop\" },\n  });\n  console.log(\n    `${data?.deleteClimbs?.nodesDeleted} sends deleted from database`\n  );\n\n  const db = inkdrop.main.dataStore.getLocalDB();\n  const syncedTag = await db.tags.findWithName(\"synced\");\n  await db.utils.deleteTag(syncedTag._id);\n  console.log(\"Removed synced tag\");\n};\n","import { logSync } from \"./logSync\";\nimport { clearDatabase } from \"./clearDatabase\";\n\nmodule.exports = {\n  activate() {\n    inkdrop.commands.add(document.body, \"climb-log:sync\", logSync);\n    inkdrop.commands.add(\n      document.body,\n      \"climb-log:clear-and-restore\",\n      async () => {\n        await clearDatabase();\n        await logSync();\n      }\n    );\n\n    inkdrop.menu.update();\n    logSync();\n  },\n\n  deactivate() {},\n};\n"],"names":["gradeRegEx","parseNotes","notes","map","note","sendsSection","body","split","sends","filter","s","match","grade","name","replace","trim","sendDate","Date","createdAt","flat","client","Client","url","exchanges","fetchExchange","createClimbsMutation","gql","syncWithDatabase","climbs","input","type","source","data","mutation","console","log","createClimbs","info","nodesCreated","logSync","db","inkdrop","main","dataStore","getLocalDB","sendsTag","tags","findWithName","syncedTag","put","_id","createId","color","count","Number","updatedAt","notesWithSends","findWithTag","limit","docs","includes","length","parsedClimbs","noteIds","utils","setTagsBatch","deleteAllClimbsMutation","clearDatabase","where","deleteClimbs","nodesDeleted","deleteTag","module","exports","activate","commands","add","document","menu","update","deactivate"],"mappings":"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"}